global:
  storageClass: standard
persistence:
  persistentVolumeClaim:
    database:
      size: 1024Gi
tls:
  secretName: tls-secret
externalURL: https://harbor.ashburncloud.net
harborAdminPassword: admin
ingress:
  hosts:
    core: harbor.ashburncloud.net
    notary: notary.ashburncloud.net
  enabled: true
  controller: default
  ## Ingress annotations done as key:value pairs
  ## For a full list of possible ingress annotations, please see
  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  ##
  annotations:
    ingress.kubernetes.io/ssl-redirect: 'true'
    ingress.kubernetes.io/proxy-body-size: '0'
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/proxy-body-size: '0'
    kubernetes.io/ingress.class: nginx    
service:
  type: Ingress
  tls:
    existingSecret: tls-secret
persistence:
  enabled: true
  ## Resource Policy
  ## Setting it to "keep" to avoid removing PVCs during a helm delete operation
  ##
  resourcePolicy: 'keep'
  persistentVolumeClaim:
    registry:
      ## If you want to reuse an existing claim, you can pass the name of the PVC using
      ## the existingClaim variable
      ##
      existingClaim: ''
      ## Specify the "storageClass" used to provision the volume.
      ## Set it to "-" to disable dynamic provisioning
      ##
      storageClass: ''
      subPath: ''
      accessMode: ReadWriteOnce
      size: 400Gi
    jobservice:
      ## If you want to reuse an existing claim, you can pass the name of the PVC using
      ## the existingClaim variable
      ##
      existingClaim: ''
      ## Specify the "storageClass" used to provision the volume.
      ## Set it to "-" to disable dynamic provisioning
      ##
      storageClass: ''
      subPath: ''
      accessMode: ReadWriteOnce
      size: 50Gi
    chartmuseum:
      ## If you want to reuse an existing claim, you can pass the name of the PVC using
      ## the existingClaim variable
      ##
      existingClaim: ''
      ## Specify the "storageClass" used to provision the volume.
      ## Set it to "-" to disable dynamic provisioning
      ##
      storageClass: ''
      subPath: ''
      accessMode: ReadWriteOnce
      size: 20Gi
    trivy:
      storageClass: ''
      accessMode: ReadWriteOnce
      size: 20Gi
kind: #@ kind
metadata:
  name: #@ name
#@ end

#@overlay/match by=overlay.subset(resource("Ingress","harbor-harbor-ingress"))
---
